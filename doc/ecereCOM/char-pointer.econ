{
   name = "char *",
   description = "Core C 'char *' data type, mostly equivalent to the String data type. Ecere APIs taking a String or char * representing text expect UTF-8 encoding.",
   usage = "Used in the declaration section of code, which is before any statements. <br>"
      "<br>"
      "A variable declared as being a char * can be assigned any literal string which is enclosed between double quotation marks (\" \").<br>"
      "<br>"
      "A key thing to remember is that the * is attached to the name of the variable, not the type.",
   example = "char * thisString; // A stand alone declaration of a char *.<br>"
      "char * aString, * bString; // Declaring two char *s at the same time.<br>"
      "char * cString = \"Hello\", char * dString = \"World\"; // Declaring and initializing two chars and initializing them at the same time.<br>"
      "________________________________________<br>"
      "<br>"
      "class Hello : Application<br>"
      "{<br>"
      "   void Main()<br>"
      "   {<br>"
      "      char * helloString = \"Hello, World!\";<br>"
      "      printf(\"%s\\n\", helloString);<br>"
      "   }<br>"
      "}<br>"
      "<br>"
      "<br>"
      "<br>"
      "Output:<br>"
      "Hello, World!",
   remarks = "char * is equivalent to char * in C.",
   also = "bool, byte, char, double, enum, float, int, int64, uint, uint16, uint32, uint64"
}
